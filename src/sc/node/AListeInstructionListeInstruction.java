/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class AListeInstructionListeInstruction extends PListeInstruction
{
    private PInstruction _instruction_;
    private PListeInstruction _listeInstruction_;

    public AListeInstructionListeInstruction()
    {
        // Constructor
    }

    public AListeInstructionListeInstruction(
        @SuppressWarnings("hiding") PInstruction _instruction_,
        @SuppressWarnings("hiding") PListeInstruction _listeInstruction_)
    {
        // Constructor
        setInstruction(_instruction_);

        setListeInstruction(_listeInstruction_);

    }

    @Override
    public Object clone()
    {
        return new AListeInstructionListeInstruction(
            cloneNode(this._instruction_),
            cloneNode(this._listeInstruction_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListeInstructionListeInstruction(this);
    }

    public PInstruction getInstruction()
    {
        return this._instruction_;
    }

    public void setInstruction(PInstruction node)
    {
        if(this._instruction_ != null)
        {
            this._instruction_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._instruction_ = node;
    }

    public PListeInstruction getListeInstruction()
    {
        return this._listeInstruction_;
    }

    public void setListeInstruction(PListeInstruction node)
    {
        if(this._listeInstruction_ != null)
        {
            this._listeInstruction_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listeInstruction_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._instruction_)
            + toString(this._listeInstruction_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._instruction_ == child)
        {
            this._instruction_ = null;
            return;
        }

        if(this._listeInstruction_ == child)
        {
            this._listeInstruction_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._instruction_ == oldChild)
        {
            setInstruction((PInstruction) newChild);
            return;
        }

        if(this._listeInstruction_ == oldChild)
        {
            setListeInstruction((PListeInstruction) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
